{
    "name": "iname-preview-devcontainer",
// Это имя будет показываться в интерфейсе VS Code и обозначать в каком
// контейнере вы работаете
    "build": {
// Эта секция отвечает за то, как будет собираться ваш контейнер.
// Вариантов два - или собирать из Dockerfile при старте, или брать из
// какого-нибудь registry. Я пошел по первому варианту - он для меня проще
        "dockerfile": "Dockerfile",
// Это самый обычный Dockerfile для сборки образа
        "context": ".."
// Это очень важный параметр - он указывает в контексте какой директории
// собирается контейнер и относительно этой директории будут отрабатывать
// все пути в Dockerfile. В примере - это папка проекта First project.
// Соответственно, если у вас в Dockerfile написано "COPY app/requirements.txt ."
// то это значит, что при сборке каталог app будет искаться относительно папки 
// First project. Эта возможность позволяет вам очень гибко собирать ваши образы.
    },
    "remoteUser": "root",
// Пользователь из-под кого запускается все в контейнере. Мне было лень
// заморачиваться и я оставил root.
// Есть еще две крайне любопытные команды - они позволяют вписать набор команд,
// выполняемых перед всеми действиями в контейнере (например, установка расширений)
// и сразу же после инициализации контейнера, перед передачей управления пользователю.
// Тут приведен пример, как можно это использовать - ставить зависимости
// или запускать сборки npm.
// "initializeCommand": "cp ../app/requirements.txt .",
// "postCreateCommand": "pip3 install -r /workspaces/alkir-infra-api/app/requirements.txt",

    "customizations": {
// В этой секции вы переопределяете настройки по умолчанию.
// Логичнее всего скопировать сюда информацию из общего файла настроек.
        "vscode": {
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python3.10",
                "python.linting.enabled": true,
                "sql-formatter.uppercase": true,
                "python.linting.flake8Enabled": true
            },    
            "extensions": [
                // тут мы задаем список расширений VS Code, которые хотим увидеть при разработке в контейнере.
                // Тут приведен мой - замените на свой.
                        "streetsidesoftware.code-spell-checker",
                        "VisualStudioExptTeam.vscodeintellicode",
                        "VisualStudioExptTeam.intellicode-api-usage-examples",
                        "golang.go",
                        // "GitHub.copilot",
                        "Codeium.codeium",
                        "ms-azuretools.vscode-docker",
                        "MS-CEINTL.vscode-language-pack-ru",
                        "streetsidesoftware.code-spell-checker",
                        "streetsidesoftware.code-spell-checker-russian"
                    ]
        }
    },
    "forwardPorts": [
// Список портов, которые будут проброшены из контейнера.
// Нужно для того, чтобы обращаться к своему приложению внутри контейнера по сети.
// Так как у меня проект FastAPI он по умолчанию открывает 8000 порт на прослушивание.
        8000
    ]
}